function defaultState() {
    return {participants: [], votes: {}};
}

var scheme   = "<%= @scheme %>";
var pollName = '<%= @uuid %>';
var uri      = scheme + window.document.location.host + "/" + pollName;
var ws       = new WebSocket(uri);
var state    = defaultState();
var myId     = null;

ws.onmessage = function(message) {
  var msg = JSON.parse(message.data);
  var topic = msg.topic;
  var payload = msg.payload;
  if (topic == 'joined' || topic == 'voted' || topic == 'exit') {
      state = payload;
      updateAverages();
  } else if (topic == 'id') {
      myId = payload.id;
  }
};

function createMessage(topic, data) {
    return JSON.stringify({topic: topic, payload: data});
}

function getUserHangoutId() {
  return myId;
}

function getState() {
  return state;
}

function vote(score) {
  $('.your-vote').html(score);
  ws.send(createMessage('vote', {voter: getUserHangoutId(), vote: score}));
}

function updateAverages() {
  var set = getVotesFromState();
  var avg = average(set);
  $('.team-average').html(avg);
  updateParticipants();
  showVoteBreakdown();
}

function getVotesFromState() {
  var state = getState();
  var set = [];
  for (p in state.votes) {
    set.push(state.votes[p]-0);
  }
  return set;
}

function updateParticipants() {
  var state = getState();
  var participants = state.participants;
  var nrVoting = Object.keys(state.votes).length;
  $('.nr-voting').html(nrVoting);
  $('.nr-participants').html(participants.length);
}

function average(set) {
  var sum = 0;
  for(var i=0;i<set.length;i++) {
    sum += set[i];
  }
  var avg = 0;
  if (set.length > 0) {
    avg = sum / set.length;
  }
  return avg.toFixed(1);
}

// ------------------------------------
// Histogram chart setup
// ------------------------------------

google.load("visualization", "1", {packages:["corechart"]});
google.setOnLoadCallback(showVoteBreakdown);

function showVoteBreakdown() {
  var scores = getVotesFromState();
  if (scores.length < 2) {
    return;
  }

  var table = [['Voter', 'Score']];

  for(var i=0;i<scores.length;i++) {
    table.push(['Person ' + (i+1), scores[i]]);
  }

  var data = google.visualization.arrayToDataTable(table);

  var options = {
    histogram: { bucketSize: 1 },
    legend: { position: 'none' },
    backgroundColor: '#333',
    width: '100%',
    hAxis: {
      textStyle: { color: '#fff' },
      gridlines: { count: -1, color: '#666' },
    },
    vAxis: {
      textStyle: { color: '#fff' },
      gridlines: { count: -1, color: '#333' },
      textPosition: 'none',
    },
    colors: ['#5bc0de', '#2a6496'],
  };

  var chart = new google.visualization.Histogram(document.getElementById('histogram'));
  chart.draw(data, options);
}

// ------------------------------------
// Initialize
// ------------------------------------

$(document).ready(function() {
    $('.btn-group .btn').click(function() {
      vote($(this).val());
    });
});
